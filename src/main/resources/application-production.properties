server.port=0
spring.application.name=user-service

spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}-${random.uid}

spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
#spring.datasource.url=jdbc:h2:mem:testdb

### the below props moved to git repository and will be accessed via git cloud config server
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/photo_app_users

### credentials moved to vault
#spring.datasource.username = root
#spring.datasource.password = root

### the below props moved to git repository and will be accessed via git cloud config server
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.format_sql=true

#http://desktop-jui435a:8080/user-service/h2-console

### to return the detailed validation errors if any
server.error.include-message=always
server.error.include-binding-errors=always

### the below props moved to git repository and will be accessed via git cloud config server
#cloud.gateway.server.ip=localhost
# expiry time set as 10 mins
#token.expiry.time=600000
#token.secret.key=qwerty
#login.url.path = /users/login

### for actuator refresh
management.endpoints.web.exposure.include=*

### Rabbit MQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

### to enable logger for feign client
logging.level.com.client.eureka.photoappusersservice.clients.AlbumServiceClient=DEBUG

# enabling circuitbreaker for hystrix
#feign.circuitbreaker.enabled=true

# enabling circuitbreaker for resilience4j
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# resilience4j configuration
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-service.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-service.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-service.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-service.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-service.event-consumer-buffer-size=10

resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-service.max-attempts=3
resilience4j.retry.instances.albums-service.wait-duration=2s
resilience4j.retry.instances.albums-service.enable-exponential-backoff=true
resilience4j.retry.instances.albums-service.exponential-backoff-multiplier=5

spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1
spring.sleuth.integration.enabled=true

logging.file.name=users-service.log

myapp.env=production profile